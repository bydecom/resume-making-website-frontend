
# Resume và Job Description API Documentation

## 1. Job Description APIs

### 1.1. Tạo Job Description mới
- **Endpoint**: `POST /api/job-descriptions`
- **Access**: Private (Yêu cầu JWT Token)
- **Request Body**:
```json
{
  "title": "Software Engineer",
  "department": "Engineering",
  "companyName": "Tech Corp",
  "location": "Ho Chi Minh City",
  "jobLevel": "Mid", // Enum: ["Intern", "Junior", "Mid", "Senior", "Lead", "Manager", "Director", "Executive"]
  "employmentType": "Full-time", // Enum: ["Full-time", "Part-time", "Internship", "Freelance", "Contract"]
  "summary": "We are looking for...",
  "responsibilities": ["Develop web applications", "Write clean code"],
  "requirements": ["3+ years experience", "Bachelor's degree"],
  "preferredQualifications": ["Master's degree", "AWS certification"],
  "skillsRequired": ["JavaScript", "React", "Node.js"],
  "benefits": ["Competitive salary", "Health insurance"],
  "postingDate": "2024-03-20T00:00:00.000Z",
  "closingDate": "2024-04-20T00:00:00.000Z",
  "tags": ["javascript", "frontend", "backend"],
  "language": "en", // Enum: ["en", "vi"]
  "status": "draft" // Enum: ["draft", "published"]
}
```
- **Success Response** (201):
```json
{
  "status": "success",
  "data": {
    // Job Description object với tất cả các trường ở trên
    "userId": "user_id",
    "createdAt": "2024-03-20T00:00:00.000Z",
    "updatedAt": "2024-03-20T00:00:00.000Z"
  },
  "message": "Job description created successfully"
}
```

### 1.2. Lấy danh sách Job Description
- **Endpoint**: `GET /api/job-descriptions`
- **Access**: Private
- **Success Response** (200):
```json
{
  "status": "success",
  "data": [
    // Mảng các Job Description objects
  ],
  "message": "Job descriptions retrieved successfully"
}
```

### 1.3. Lấy chi tiết Job Description
- **Endpoint**: `GET /api/job-descriptions/:id`
- **Access**: Private
- **Success Response** (200):
```json
{
  "status": "success",
  "data": {
    // Job Description object
  },
  "message": "Job description retrieved successfully"
}
```

### 1.4. Cập nhật Job Description
- **Endpoint**: `PUT /api/job-descriptions/:id`
- **Access**: Private
- **Request Body**: Tương tự như tạo mới
- **Success Response** (200):
```json
{
  "status": "success",
  "data": {
    // Updated Job Description object
  },
  "message": "Job description updated successfully"
}
```

### 1.5. Xóa Job Description
- **Endpoint**: `DELETE /api/job-descriptions/:id`
- **Access**: Private
- **Success Response** (200):
```json
{
  "status": "success",
  "message": "Job description deleted successfully"
}
```

### 1.6. Trích xuất Job Description từ văn bản
- **Endpoint**: `POST /api/extract/job-description`
- **Access**: Private
- **Request Body**:
```json
{
  "text": "Raw job description text..."
}
```
- **Success Response** (200):
```json
{
  "status": "success",
  "data": {
    "title": "...",
    "company": "...",
    "location": "...",
    "jobType": "...",
    "description": "...",
    "requirements": ["..."],
    "responsibilities": ["..."],
    "benefits": ["..."],
    "salary": {
      "min": 1000,
      "max": 2000,
      "currency": "USD",
      "period": "month"
    },
    "keywords": ["..."],
    "status": "active",
    "applicationDeadline": "2024-04-20",
    "contactInfo": {
      "name": "...",
      "email": "...",
      "phone": "..."
    }
  },
  "message": "Job Description data extracted successfully"
}
```

## 2. Resume APIs

### 2.1. Tạo Resume mới
- **Endpoint**: `POST /api/resumes`
- **Access**: Private
- **Request Body**:
```json
{
  "cvId": "cv_id",
  "jobDescriptionId": "jd_id",
  "name": "My Resume",
  "personalInfo": {
    "firstName": "John",
    "lastName": "Doe",
    "professionalHeadline": "Senior Software Engineer",
    "email": "john@example.com",
    "phone": "+1234567890",
    "location": "Ho Chi Minh City",
    "country": "Vietnam",
    "website": "https://johndoe.com",
    "linkedin": "https://linkedin.com/in/johndoe"
  },
  "summary": "Experienced software engineer...",
  "matchedExperience": [
    {
      "title": "Senior Developer",
      "company": "Tech Corp",
      "startDate": "2020-01",
      "endDate": "2023-12",
      "description": "Led development team...",
      "isPresent": false,
      "relevance": 95,
      "comment": "Highly relevant experience..."
    }
  ],
  "matchedSkills": [
    {
      "skill": "JavaScript",
      "relevance": 90,
      "comment": "Essential skill for the position"
    }
  ],
  // Các trường matched khác tương tự
  "status": "draft",
  "isDefault": false
}
```
- **Success Response** (201):
```json
{
  "success": true,
  "data": {
    // Resume object với tất cả các trường ở trên
  }
}
```

### 2.2. Lấy danh sách Resume
- **Endpoint**: `GET /api/resumes`
- **Access**: Private
- **Success Response** (200):
```json
{
  "success": true,
  "count": 5,
  "data": [
    // Mảng các Resume objects
  ]
}
```

### 2.3. Lấy chi tiết Resume
- **Endpoint**: `GET /api/resumes/:id`
- **Access**: Private
- **Success Response** (200):
```json
{
  "success": true,
  "data": {
    // Resume object
  }
}
```

### 2.4. Cập nhật Resume
- **Endpoint**: `PUT /api/resumes/:id`
- **Access**: Private
- **Request Body**: Tương tự như tạo mới
- **Success Response** (200):
```json
{
  "success": true,
  "data": {
    // Updated Resume object
  }
}
```

### 2.5. Xóa Resume
- **Endpoint**: `DELETE /api/resumes/:id`
- **Access**: Private
- **Success Response** (200):
```json
{
  "success": true,
  "data": {}
}
```

### 2.6. Tạo Resume phù hợp từ CV và Job Description
- **Endpoint**: `POST /api/resumes/match`
- **Access**: Private
- **Request Body**:
```json
{
  "cvId": "cv_id",
  "jobDescriptionId": "jd_id"
}
```
- **Success Response** (201):
```json
{
  "success": true,
  "data": {
    // Resume object với các trường matched được AI phân tích và đánh giá
  }
}
```

## 3. Lưu ý quan trọng

### 3.1. Authentication
- Tất cả các endpoints đều yêu cầu JWT Token trong header:
```
Authorization: Bearer <your_jwt_token>
```

### 3.2. Error Responses
- **400 Bad Request**: Input không hợp lệ
- **401 Unauthorized**: Không có token hoặc token không hợp lệ
- **403 Forbidden**: Không có quyền truy cập resource
- **404 Not Found**: Resource không tồn tại
- **500 Server Error**: Lỗi server

### 3.3. Validation
- Tất cả các trường required phải được cung cấp
- Các enum fields phải match với các giá trị cho phép
- Các date fields phải theo format ISO

### 3.4. Pagination
- Hiện tại các endpoints get list chưa hỗ trợ pagination
- Sẽ được cập nhật trong các phiên bản sau

```

Documentation này sẽ giúp team Frontend hiểu rõ:
1. Các endpoints có sẵn và cách sử dụng
2. Cấu trúc request/response của mỗi API
3. Các validation và error handling cần chú ý
4. Authentication requirements
5. Các lưu ý quan trọng khác
